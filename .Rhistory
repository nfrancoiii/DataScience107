install.packages("SDSFoundations")
library("SDSFoundations")
install.packages("SDSFoundations")
getwd()
install.packages("C:/Users/nicholas.franco/Desktop/SDSFoundations_1.1_R_x86_64-apple-darwin10.8.0.tar", repos = NULL)
install.packages("C:/Users/nicholas.franco/Desktop/SDSFoundations_1.1.zip", repos = NULL)
library("SDSFoundations")
bike <- BikeData
bike
bike[bike$Cycfreq == "Daily"]
bike[bike$cyc_freq == "Daily"]
bike[bike$cyc_freq == "Daily",]
sum(bike$cyc_freq == "Daily")
sum(bike$cyc_freq == "Daily" && user_id < 11)
sum(bike$cyc_freq == "Daily" && bike$user_id < 11)
bike[bike$cyc_freq == "Daily" && bike$user_id < 11]
bike
head(bike)
?SDSFoundations
??SDSFoundations
?BikeData
table(bike$student)
student <-bike[bike$student==1,]
rider_times<bike$times
rider_times<-bike$times
rider_times
student
table(student$cyc_freq)
distance <- student$distance
mean(distance)
males <- bike [bike$gender =='M',]
table(bike$cyc_freq)
daily_ride <- bike[bike$cyc_freq == "Daily"]
daily_ride <- bike[bike$cyc_freq == "Daily",]
table(daily_ride$gender == "M")
daily_age <- daily_ride$age
mean(daily_age)
fem_daily <- daily_ride[daily_ride$gender == 'F']
fem_daily <- daily_ride[daily_ride$gender == 'F',]
fem_age_daily <- fem_daily$age
mean(fem_age_daily)
men_daily <- daily_ride[daily_ride$gender == 'M',]
men_age_daily <- men_daily$age
mean(men_age_daily)
men_daily_thirty <- men_daily[men_daily$age >= 30,]
table men_daily_thirty
table(men_daily_thirty)
getw()
getwd()
setwd
setwd(C:\Users\nicholas.franco\Desktop\FrancoPersonal\DataScience107)
setwd(C:\\Users\\nicholas.franco\\Desktop\\FrancoPersonal\\DataScience107)
setwd("C:/Users/nicholas.franco/Desktop/FrancoPersonal/DataScience107")
?read.csv
pop <- read.csv("indicator gapminder population - Data.csv")
u5Mort <- read.csv("indicator gapminder under5mortality - Data.csv")
gdp <- read.csv("indicator GDP at market prices, constant 2000 US$ (WB estimates) .xls - Data.csv")
life_exp <- read.csv("indicator life_expectancy_at_birth - Data.csv")
fertile <- read.csv("indicator undata total_fertility - Data.csv")
head(gdp)
names(gdp)
View(gdp)
# Your code goes here.
my_func <- function(x){
return names(x)
}
```
my_func <- function(x){
return names(x)
}
```{r}
# Your code goes here.
my_func <- function(x){
return names(x)
}
```
names
?names
names(pop)
head(pop)
```{r}
# Your code goes here.
my_func <- function(x){
return(names(x))
}
```
my_func <- function(x){
return(names(x))
}
my_func(pop)
my_func(u5Mort)
my_func(gdp)
my_func(life_exp)
head(life_exp)
my_func(fertile)
colnames(gdp)
colnames(gdp)[1]
# Your code goes here.
colnames(pop)[1] <- "country"
colnames(u5Mort)[1] <- "country"
colnames(gdp)[1] <- "country"
colnames(life_exp)[1] <- "country"
colnames(fertile)[1] <- "country"
colnames(gdp)
colnames(pop)
install.packages("tidyr")
library(tidyr)
?gather
pop %>% gather(year, -country)
gather(pop, year, - country)
head(pop)
pop %>% gather(year, child_mortality, -country)
head(pop)
